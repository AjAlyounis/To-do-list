{"ast":null,"code":"import _defineProperty from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmed/Desktop/CRUD-Todo-List/src/components/App.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TaskForm from \"./tasks/taskForm/TaskForm\";\nimport TaskList from \"./tasks/taskList/TaskList\";\nimport styled from \"styled-components\";\nimport \".././Style.css\";\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tasks = _useState2[0],\n        setTasks = _useState2[1];\n\n  useEffect(() => {\n    if (tasks.length === 0) {\n      if (localStorage.getItem(\"tasks\")) {\n        setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (localStorage.getItem(\"tasks\") && JSON.parse(localStorage.getItem(\"tasks\").length !== tasks.length)) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }, [tasks]);\n\n  function toggleComplete(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return _objectSpread({}, task, {\n          completed: !task.completed\n        });\n      } else {\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteCompleted() {\n    const updatedTasks = tasks.filter(task => !task.completed);\n    setTasks(updatedTasks);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"background\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/edittask/:id\",\n    render: props => React.createElement(TaskForm, Object.assign({}, props, {\n      setTasks: setTasks,\n      tasks: tasks,\n      edit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addtask\",\n    render: props => React.createElement(TaskForm, Object.assign({}, props, {\n      setTasks: setTasks,\n      tasks: tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })),\n    edit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(TaskList, Object.assign({}, props, {\n      tasks: tasks,\n      toggle: toggleComplete,\n      delete: deleteCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahmed/Desktop/CRUD-Todo-List/src/components/App.jsx"],"names":["React","useState","useEffect","Route","Switch","TaskForm","TaskList","styled","App","tasks","setTasks","length","localStorage","getItem","JSON","parse","setItem","stringify","toggleComplete","id","updatedTasks","map","task","completed","deleteCompleted","filter","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TaskForm from \"./tasks/taskForm/TaskForm\";\nimport TaskList from \"./tasks/taskList/TaskList\";\nimport styled from \"styled-components\";\nimport \".././Style.css\";\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    if (tasks.length === 0) {\n      if (localStorage.getItem(\"tasks\")) {\n        setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"tasks\") &&\n      JSON.parse(localStorage.getItem(\"tasks\").length !== tasks.length)\n    ) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }, [tasks]);\n\n  function toggleComplete(id) {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed };\n      } else {\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteCompleted() {\n    const updatedTasks = tasks.filter(task => !task.completed);\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <div>\n      <background>\n        <Switch>\n          <Route\n            path=\"/edittask/:id\"\n            render={props => (\n              <TaskForm\n                {...props}\n                setTasks={setTasks}\n                tasks={tasks}\n                edit={true}\n              />\n            )}\n          />\n          <Route\n            path=\"/addtask\"\n            render={props => (\n              <TaskForm {...props} setTasks={setTasks} tasks={tasks} />\n            )}\n            edit={false}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <TaskList\n                {...props}\n                tasks={tasks}\n                toggle={toggleComplete}\n                delete={deleteCompleted}\n              />\n            )}\n          />\n        </Switch>\n      </background>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}