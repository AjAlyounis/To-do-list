{"ast":null,"code":"import _defineProperty from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskList/Task.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IcoMoon from \"react-icomoon\";\n\nfunction Task({\n  task,\n  toggle,\n  props,\n  setTasks,\n  tasks,\n  history,\n  edit,\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const _useState = useState({\n    id: Date.now(),\n    task: \"\",\n    completed: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formValues = _useState2[0],\n        setFormValues = _useState2[1];\n\n  useEffect(() => {\n    if (edit) {\n      const editTask = tasks.filter(task => task.id.toString() === id)[0];\n      setFormValues(editTask);\n    }\n  }, []);\n\n  function handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setFormValues(_objectSpread({}, formValues, {\n      [name]: value\n    }));\n  }\n\n  function updateTask(taskId) {\n    console.log(formValues);\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        console.log(\"Found \".concat(taskId));\n        return formValues;\n      } else {\n        console.log(\"Not Found\");\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask() {\n    setFormValues(state => _objectSpread({}, state, {\n      id: Date.now()\n    }));\n    setTasks([...tasks, formValues]);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    edit ? updateTask(formValues.id) : addTask();\n    history.push(\"/\");\n  }\n\n  function handleCancel() {\n    history.push(\"/\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \", React.createElement(\"li\", {\n    onClick: () => toggle(task.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, task.completed ? React.createElement(\"del\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\".concat(task.task)) : \"\".concat(task.task)), React.createElement(\"button\", {\n    className: \"edit-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/edittask/\".concat(task.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \" \", React.createElement(IcoMoon, {\n    icon: \"pencil2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"delete-style\",\n    onClick: props.delete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(IcoMoon, {\n    icon: \"bin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Task Form\"));\n}\n\nexport default Task;","map":{"version":3,"sources":["/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskList/Task.jsx"],"names":["React","Fragment","useState","useEffect","Link","IcoMoon","Task","task","toggle","props","setTasks","tasks","history","edit","match","params","id","Date","now","completed","formValues","setFormValues","editTask","filter","toString","handleChange","target","name","value","updateTask","taskId","console","log","updatedTasks","map","addTask","state","handleSubmit","e","preventDefault","push","handleCancel","delete"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IcoMoon from \"react-icomoon\";\nfunction Task({\n  task,\n  toggle,\n  props,\n  setTasks,\n  tasks,\n  history,\n  edit,\n  match: {\n    params: { id }\n  }\n}) {\n  const [formValues, setFormValues] = useState({\n    id: Date.now(),\n    task: \"\",\n    completed: false\n  });\n\n  useEffect(() => {\n    if (edit) {\n      const editTask = tasks.filter(task => task.id.toString() === id)[0];\n      setFormValues(editTask);\n    }\n  }, []);\n\n  function handleChange({ target: { name, value } }) {\n    setFormValues({ ...formValues, [name]: value });\n  }\n\n  function updateTask(taskId) {\n    console.log(formValues);\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        console.log(`Found ${taskId}`);\n        return formValues;\n      } else {\n        console.log(`Not Found`);\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask() {\n    setFormValues(state => ({ ...state, id: Date.now() }));\n    setTasks([...tasks, formValues]);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    edit ? updateTask(formValues.id) : addTask();\n    history.push(\"/\");\n  }\n\n  function handleCancel() {\n    history.push(\"/\");\n  }\n  return (\n    <Fragment>\n      {\" \"}\n      {/* <> */}\n      <li onClick={() => toggle(task.id)}>\n        {task.completed ? <del>{`${task.task}`}</del> : `${task.task}`}\n      </li>\n      <button className=\"edit-style\">\n        <Link to={`/edittask/${task.id}`}>\n          {\" \"}\n          <IcoMoon icon=\"pencil2\" />\n        </Link>\n      </button>\n      <button className=\"delete-style\" onClick={props.delete}>\n        <IcoMoon icon=\"bin\" />\n      </button>\n      <h4>Task Form</h4>\n    </Fragment>\n  );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}