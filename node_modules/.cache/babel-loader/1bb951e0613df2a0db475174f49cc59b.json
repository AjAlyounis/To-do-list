{"ast":null,"code":"import _defineProperty from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskForm/TaskForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction TaskForm({\n  setTasks,\n  tasks,\n  history,\n  edit,\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const _useState = useState({\n    id: Date.now(),\n    task: \"\",\n    completed: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formValues = _useState2[0],\n        setFormValues = _useState2[1];\n\n  useEffect(() => {\n    if (edit) {\n      const editTask = tasks.filter(task => task.id.toString() === id)[0];\n      setFormValues(editTask);\n    }\n  }, []);\n\n  function handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setFormValues(_objectSpread({}, formValues, {\n      [name]: value\n    }));\n  }\n\n  function updateTask(taskId) {\n    console.log(formValues);\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        console.log(\"Found \".concat(taskId));\n        return formValues;\n      } else {\n        console.log(\"Not Found\");\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask() {\n    setFormValues(state => _objectSpread({}, state, {\n      id: Date.now()\n    }));\n    setTasks([...tasks, formValues]);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    edit ? updateTask(formValues.id) : addTask();\n    history.push(\"/\");\n  }\n\n  function handleCancel() {\n    history.push(\"/\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"taskform-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Task Form\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"task\",\n    value: formValues.task,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Cancel\")));\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskForm/TaskForm.jsx"],"names":["React","useState","useEffect","TaskForm","setTasks","tasks","history","edit","match","params","id","Date","now","task","completed","formValues","setFormValues","editTask","filter","toString","handleChange","target","name","value","updateTask","taskId","console","log","updatedTasks","map","addTask","state","handleSubmit","e","preventDefault","push","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction TaskForm({\n  setTasks,\n  tasks,\n  history,\n  edit,\n  match: {\n    params: { id }\n  }\n}) {\n  const [formValues, setFormValues] = useState({\n    id: Date.now(),\n    task: \"\",\n    completed: false\n  });\n\n  useEffect(() => {\n    if (edit) {\n      const editTask = tasks.filter(task => task.id.toString() === id)[0];\n      setFormValues(editTask);\n    }\n  }, []);\n\n  function handleChange({ target: { name, value } }) {\n    setFormValues({ ...formValues, [name]: value });\n  }\n\n  function updateTask(taskId) {\n    console.log(formValues);\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        console.log(`Found ${taskId}`);\n        return formValues;\n      } else {\n        console.log(`Not Found`);\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask() {\n    setFormValues(state => ({ ...state, id: Date.now() }));\n    setTasks([...tasks, formValues]);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    edit ? updateTask(formValues.id) : addTask();\n    history.push(\"/\");\n  }\n\n  function handleCancel() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"taskform-style\">\n      <h4>Task Form</h4>\n      <form onSubmit={handleSubmit}>\n        <input name=\"task\" value={formValues.task} onChange={handleChange} />\n        <button type=\"submit\">Submit</button>\n        <button onClick={handleCancel}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}