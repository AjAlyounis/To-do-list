{"ast":null,"code":"import _defineProperty from \"/Users/ahmed/Desktop/CRUD-Todo-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskList/Task.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IcoMoon from \"react-icomoon\";\nuseEffect(() => {\n  if (edit) {\n    const editTask = tasks.filter(task => task.id.toString() === id)[0];\n    setFormValues(editTask);\n  }\n}, []);\n\nfunction Task({\n  task,\n  toggle,\n  props\n}) {\n  function handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setFormValues(_objectSpread({}, formValues, {\n      [name]: value\n    }));\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" \", React.createElement(\"li\", {\n    onClick: () => toggle(task.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, task.completed ? React.createElement(\"del\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\".concat(task.task)) : \"\".concat(task.task)), React.createElement(\"button\", {\n    className: \"edit-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/edittask/\".concat(task.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" \", React.createElement(IcoMoon, {\n    icon: \"pencil2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    name: \"task\",\n    value: formValues.task,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"delete-style\",\n    onClick: props.delete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(IcoMoon, {\n    icon: \"bin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}\n\nexport default Task;","map":{"version":3,"sources":["/Users/ahmed/Desktop/CRUD-Todo-List/src/components/tasks/taskList/Task.jsx"],"names":["React","Fragment","Link","IcoMoon","useEffect","edit","editTask","tasks","filter","task","id","toString","setFormValues","Task","toggle","props","handleChange","target","name","value","formValues","completed","delete"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEAC,SAAS,CAAC,MAAM;AACd,MAAIC,IAAJ,EAAU;AACR,UAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,CAAQC,QAAR,OAAuBD,EAA5C,EAAgD,CAAhD,CAAjB;AACAE,IAAAA,aAAa,CAACN,QAAD,CAAb;AACD;AACF,CALQ,EAKN,EALM,CAAT;;AAOA,SAASO,IAAT,CAAc;AAAEJ,EAAAA,IAAF;AAAQK,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAd,EAAuC;AACrC,WAASC,YAAT,CAAsB;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAtB,EAAmD;AACjDP,IAAAA,aAAa,mBAAMQ,UAAN;AAAkB,OAACF,IAAD,GAAQC;AAA1B,OAAb;AACD;;AACD,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAGE;AAAI,IAAA,OAAO,EAAE,MAAML,MAAM,CAACL,IAAI,CAACC,EAAN,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACY,SAAL,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASZ,IAAI,CAACA,IAAd,EAAjB,aAAkDA,IAAI,CAACA,IAAvD,CADH,CAHF,EAME;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAeA,IAAI,CAACC,EAApB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CANF,EAYE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEU,UAAU,CAACX,IAArC;AAA2C,IAAA,QAAQ,EAAEO,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAED,KAAK,CAACO,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AAmBD;;AAED,eAAeT,IAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IcoMoon from \"react-icomoon\";\n\nuseEffect(() => {\n  if (edit) {\n    const editTask = tasks.filter(task => task.id.toString() === id)[0];\n    setFormValues(editTask);\n  }\n}, []);\n\nfunction Task({ task, toggle, props }) {\n  function handleChange({ target: { name, value } }) {\n    setFormValues({ ...formValues, [name]: value });\n  }\n  return (\n    <Fragment>\n      {\" \"}\n      {/* <> */}\n      <li onClick={() => toggle(task.id)}>\n        {task.completed ? <del>{`${task.task}`}</del> : `${task.task}`}\n      </li>\n      <button className=\"edit-style\">\n        <Link to={`/edittask/${task.id}`}>\n          {\" \"}\n          <IcoMoon icon=\"pencil2\" />\n        </Link>\n      </button>\n      <input name=\"task\" value={formValues.task} onChange={handleChange} />\n      <button className=\"delete-style\" onClick={props.delete}>\n        <IcoMoon icon=\"bin\" />\n      </button>\n    </Fragment>\n  );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}